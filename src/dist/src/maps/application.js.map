{"version":3,"sources":["src/app.js","src/component/contact/contact.js","src/component/layout/MainView.js","src/component/layout/footer/View.js","src/component/layout/header/View.js","src/component/page/contact/View.js","src/component/page/home/View.js","src/component/page/inscription/View.js"],"names":["$","Backbone","Handlebars","_","app","TPL","templates","window","jQuery","ContactService","doRequest","data","$defer","Deferred","ajax","then","resolve","fail","reject","promise","testDoRequest","url","message","console","log","FooterView","View","extend","template","component","layout","footer","view","el","options","render","this","$el","html","footerView","BaseView","headerView","header","constructor","apply","arguments","on","_setupScroll","_setupScrollSpy","find","event","$target","currentTarget","selector","attr","$item","preventDefault","stop","animate","scrollTop","offset","top","bind","scrollspy","target","trigger","homeView","page","home","_setupProcessLine","_setupContactForm","_setupUI","ui","contactForm","processLine","$element","inViewPort","method","$window","$elements","each","height","closest","scroll","form","document","getElementById","validations","rules","name","required","email","phone","number","defaultMessages","validation","FormValidator","submit","valid","response"],"mappings":"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","file":"application.js","sourcesContent":["(function($, Backbone, Handlebars, _) {\n  var\n    app = {\n      TPL: Handlebars.templates\n    };\n\n\n  window.app = app;\n\n})(window.jQuery, window.Backbone, Handlebars, window._);\n","(function(app, $) {\n  'use strict';\n\n  app.ContactService = (function(){\n\n    /**\n     * Do a request to server\n     *\n     * @param {Object} data\n     */\n    function doRequest(data) {\n      var\n        $defer = $.Deferred();\n\n      $.ajax(data)\n        .then($defer.resolve)\n        .fail($defer.reject);\n\n      return $defer.promise();\n    }\n\n    function testDoRequest() {\n      var\n        data,\n        promise;\n\n      data = {\n        url: 'http://dev.metodomicroinfo.com.br/index.html'\n      };\n\n      promise = doRequest(data);\n      promise\n        .then(function(message){\n          console.log('message -> ', message);\n        });\n    }\n\n    return {\n      doRequest: doRequest,\n      testDoRequest: testDoRequest\n    };\n  });\n\n})(app, jQuery);\n","\n","var\n  FooterView = Backbone.View.extend({\n    template: app.TPL.component.layout.footer.view,\n    el: '.footer-region',\n    options: {\n      data: {\n      }\n    },\n    render: function() {\n      this.$el.html(this.template(this.options.data));\n    }\n  }),\n  footerView = new FooterView();\n\nfooterView.render();\n\n","(function(app) {\n    var\n     BaseView = Backbone.View;\n\n   app.headerView = BaseView.extend({\n      template: app.TPL.component.layout.header.view,\n      el: '.header-region',\n      options: {\n        data: {}\n      },\n      /**\n       * Construtor\n       *\n       * @return {void}\n       */\n      constructor: function() {\n        // Super\n        BaseView.apply(this, arguments);\n\n        this\n          .on('render', this._setupScroll)\n          .on('render', this._setupScrollSpy)\n          .render();\n      },\n      /**\n       * Configura o scroll ao clicar em algum link do header\n       *\n       * @return {void}\n       */\n      _setupScroll: function() {\n        // Page scrolling feature\n        this.$el.find('a.page-scroll')\n          .on('click', function(event) {\n            var\n              $target = $(event.currentTarget),\n              selector = $target.attr('href'),\n              $item = $(selector);\n\n            event.preventDefault();\n\n            console.log(event);\n\n            $('html, body')\n              .stop().animate({\n                scrollTop: $item.offset().top - 50\n              }, 500);\n\n            // $(\"#navbar\").collapse('hide');\n          }.bind(this));\n      },\n      /**\n       * Ativa controle de scroll e marcação de menu\n       *\n       * @return {void}\n       */\n      _setupScrollSpy: function() {\n        $('body').scrollspy({\n          target: '.navbar-fixed-top',\n          offset: 70\n        });\n      },\n      render: function() {\n        this.$el.html(this.template(this.options.data));\n        this.trigger('render');\n        return this;\n      }\n    });\n\n    new app.headerView();\n})(window.app);\n","\n","(function(app, $) {\n  'use strict';\n\n  var\n    BaseView = Backbone.View;\n\n  app.homeView = BaseView.extend({\n    template: app.TPL.component.page.home.view,\n    el: '.context-region',\n    options: {\n      data: {}\n    },\n    /**\n     * Construtor\n     *\n     * @return {void}\n     */\n    constructor: function() {\n      BaseView.apply(this, arguments);\n\n      // Events\n      this\n      // .on('render', this._setupUI.bind(this))\n        .on('render', this._setupProcessLine)\n        .on('render', this._setupContactForm.bind(this))\n        .render();\n    },\n    _setupUI: function() {\n      // UI\n      this.ui = {\n        contactForm: this.$el.find('#contact-frm')\n      };\n    },\n    /**\n     * Adiciona remove classe para os itens de linha\n     * de processos\n     *\n     * @return {void}\n     */\n    _setupProcessLine: function() {\n      var\n        $elements = $('.process-node');\n\n      function processLine() {\n        var\n          method = 'addClass',\n          $window = $(window),\n          $element,\n          inViewPort;\n\n        $elements.each(function() {\n          $element = $(this);\n\n          if (!(inViewPort = $element.offset().top < $window.scrollTop() + $window.height() - 300)) {\n            method = 'removeClass';\n          }\n\n          $element\n            [method](\"active\")\n            .closest(\"li\")[method](\"active\")\n            .find(\".line\")[method](\"active\");\n        });\n      }\n\n      // Bind\n      $(window).scroll(function() {\n        processLine();\n      });\n    },\n    /**\n     * Define configurações do form\n     *\n     * @return {void}\n     */\n    _setupContactForm: function() {\n      var\n        form = document.getElementById('contact-frm'),\n        validations = {\n          rules: {\n            name: {\n              required: true\n            },\n            email: {\n              required: true,\n              email: true\n            },\n            phone: {\n              required: false,\n              number: true\n            },\n            message: {\n              required: true\n            }\n          }\n        },\n        options = {\n          defaultMessages: {\n            required: 'Este campo é requerido.',\n            email: 'Informe e-mail no formato \"usuario@servidor.com\".',\n            number: 'Informe apenas números.'\n          }\n        },\n        validation = new FormValidator(form, validations, options);\n\n      // form.addEventListener('submit', function(e){\n      form.submit = function(){\n        // e.preventDefault();\n\n        if(validation.valid()) {\n          var\n            data = {\n              url: 'http://dev.metodomicroinfo.com.br/index.html'\n            },\n            ContactService = app.ContactService();\n\n          ContactService.doRequest(data)\n            .then(function(response){\n              console.log('response -> ', response);\n              debugger;\n            });\n        }\n      };\n    },\n    render: function() {\n      this.$el.html(this.template(this.options.data));\n      this.trigger('render');\n      return this;\n    }\n  });\n\n  new app.homeView();\n\n})(window.app, jQuery, window.FormValidator);\n\n","/*var\n  ContactView = Backbone.View.extend({\n    template: app.TPL.component.page.contact.view,\n    el: '.context-region',\n    options: {\n      data: {\n      }\n    },\n    render: function() {\n      this.$el.html(this.template(this.options.data));\n    }\n  }),\n  contactView = new ContactView();\n\ncontactView.render();\n*/\n"],"sourceRoot":"/source/"}