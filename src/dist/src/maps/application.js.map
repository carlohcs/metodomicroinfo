{"version":3,"sources":["src/app.js","src/component/contact/contact.js","src/component/layout/MainView.js","src/component/layout/footer/View.js","src/component/layout/header/View.js","src/component/page/contact/View.js","src/component/page/home/View.js","src/component/page/inscription/View.js"],"names":["$","Backbone","Handlebars","_","app","TPL","templates","window","jQuery","FooterView","View","extend","template","component","layout","footer","view","el","options","data","render","this","$el","html","footerView","BaseView","headerView","header","constructor","apply","arguments","on","_setupScroll","_setupScrollSpy","find","event","$target","currentTarget","selector","attr","$item","preventDefault","console","log","stop","animate","scrollTop","offset","top","bind","scrollspy","target","trigger","homeView","page","home","_setupProcessLine","processLine","$element","inViewPort","method","$window","$elements","each","height","closest","scroll"],"mappings":"CAAA,SAAUA,EAAGC,EAAUC,EAAYC,GACjC,GACEC,IACEC,IAAKH,EAAWI,UAIpBC,QAAOH,IAAMA,GAEZG,OAAOC,OAAQD,OAAON,SAAUC,WAAYK,OAAOJ;ACTtD;ACAA;ACAA,GACEM,YAAaR,SAASS,KAAKC,QACzBC,SAAUR,IAAIC,IAAIQ,UAAUC,OAAOC,OAAOC,KAC1CC,GAAI,iBACJC,SACEC,SAGFC,OAAQ,WACNC,KAAKC,IAAIC,KAAKF,KAAKT,SAASS,KAAKH,QAAQC,UAG7CK,WAAa,GAAIf,WAEnBe,YAAWJ;CCdX,SAAUhB,GACN,GACCqB,GAAWxB,SAASS,IAEtBN,GAAIsB,WAAaD,EAASd,QACvBC,SAAUR,EAAIC,IAAIQ,UAAUC,OAAOa,OAAOX,KAC1CC,GAAI,iBACJC,SACEC,SAOFS,YAAa,WAEXH,EAASI,MAAMR,KAAMS,WAErBT,KACGU,GAAG,SAAUV,KAAKW,cAClBD,GAAG,SAAUV,KAAKY,iBAClBb,UAOLY,aAAc,WAEZX,KAAKC,IAAIY,KAAK,iBACXH,GAAG,QAAS,SAASI,GACpB,GACEC,GAAUpC,EAAEmC,EAAME,eAClBC,EAAWF,EAAQG,KAAK,QACxBC,EAAQxC,EAAEsC,EAEZH,GAAMM,iBAENC,QAAQC,IAAIR,GAEZnC,EAAE,cACC4C,OAAOC,SACNC,UAAWN,EAAMO,SAASC,IAAM,IAC/B,MAGLC,KAAK5B,QAOXY,gBAAiB,WACfjC,EAAE,QAAQkD,WACRC,OAAQ,oBACRJ,OAAQ,MAGZ3B,OAAQ,WAGN,MAFAC,MAAKC,IAAIC,KAAKF,KAAKT,SAASS,KAAKH,QAAQC,OACzCE,KAAK+B,QAAQ,UACN/B,QAIX,GAAIjB,GAAIsB,YACTnB,OAAOH;ACrEV;CCAA,SAAUA,GAER,GACEqB,GAAWxB,SAASS,IAEtBN,GAAIiD,SAAW5B,EAASd,QACtBC,SAAUR,EAAIC,IAAIQ,UAAUyC,KAAKC,KAAKvC,KACtCC,GAAI,kBACJC,SACEC,SAOFS,YAAa,WACXH,EAASI,MAAMR,KAAMS,WAErBT,KACGU,GAAG,SAAUV,KAAKmC,mBAClBpC,UAQLoC,kBAAmB,WAIjB,QAASC,KACP,GAGEC,GACAC,EAHAC,EAAS,WACTC,EAAU7D,EAAEO,OAIfuD,GAAUC,KAAK,WACZL,EAAW1D,EAAEqB,OAERsC,EAAaD,EAASX,SAASC,IAAMa,EAAQf,YAAce,EAAQG,SAAW,OACjFJ,EAAS,eAGVF,EACEE,GAAQ,UACRK,QAAQ,MACRL,GAAQ,UACR1B,KAAK,SACL0B,GAAQ,YAtBf,GACEE,GAAY9D,EAAE,gBA0BhBA,GAAEO,QAAQ2D,OAAO,WACfT,OAGJrC,OAAQ,WAGN,MAFAC,MAAKC,IAAIC,KAAKF,KAAKT,SAASS,KAAKH,QAAQC,OACzCE,KAAK+B,QAAQ,UACN/B,QAIX,GAAIjB,GAAIiD,UAEP9C,OAAOH;ACtEV","file":"application.js","sourcesContent":["(function($, Backbone, Handlebars, _) {\n  var\n    app = {\n      TPL: Handlebars.templates\n    };\n\n\n  window.app = app;\n\n})(window.jQuery, window.Backbone, Handlebars, window._);\n","\n","\n","var\n  FooterView = Backbone.View.extend({\n    template: app.TPL.component.layout.footer.view,\n    el: '.footer-region',\n    options: {\n      data: {\n      }\n    },\n    render: function() {\n      this.$el.html(this.template(this.options.data));\n    }\n  }),\n  footerView = new FooterView();\n\nfooterView.render();\n\n","(function(app) {\n    var\n     BaseView = Backbone.View;\n\n   app.headerView = BaseView.extend({\n      template: app.TPL.component.layout.header.view,\n      el: '.header-region',\n      options: {\n        data: {}\n      },\n      /**\n       * Construtor\n       *\n       * @return {void}\n       */\n      constructor: function() {\n        // Super\n        BaseView.apply(this, arguments);\n\n        this\n          .on('render', this._setupScroll)\n          .on('render', this._setupScrollSpy)\n          .render();\n      },\n      /**\n       * Configura o scroll ao clicar em algum link do header\n       *\n       * @return {void}\n       */\n      _setupScroll: function() {\n        // Page scrolling feature\n        this.$el.find('a.page-scroll')\n          .on('click', function(event) {\n            var\n              $target = $(event.currentTarget),\n              selector = $target.attr('href'),\n              $item = $(selector);\n\n            event.preventDefault();\n\n            console.log(event);\n\n            $('html, body')\n              .stop().animate({\n                scrollTop: $item.offset().top - 50\n              }, 500);\n\n            // $(\"#navbar\").collapse('hide');\n          }.bind(this));\n      },\n      /**\n       * Ativa controle de scroll e marcação de menu\n       *\n       * @return {void}\n       */\n      _setupScrollSpy: function() {\n        $('body').scrollspy({\n          target: '.navbar-fixed-top',\n          offset: 70\n        });\n      },\n      render: function() {\n        this.$el.html(this.template(this.options.data));\n        this.trigger('render');\n        return this;\n      }\n    });\n\n    new app.headerView();\n})(window.app);\n","\n","(function(app) {\n\n  var\n    BaseView = Backbone.View;\n\n  app.homeView = BaseView.extend({\n    template: app.TPL.component.page.home.view,\n    el: '.context-region',\n    options: {\n      data: {}\n    },\n    /**\n     * Construtor\n     *\n     * @return {void}\n     */\n    constructor: function() {\n      BaseView.apply(this, arguments);\n\n      this\n        .on('render', this._setupProcessLine)\n        .render();\n    },\n    /**\n     * Adiciona remove classe para os itens de linha\n     * de processos\n     *\n     * @return {void}\n     */\n    _setupProcessLine: function() {\n      var\n        $elements = $('.process-node');\n\n      function processLine() {\n        var\n          method = 'addClass',\n          $window = $(window),\n          $element,\n          inViewPort;\n        \n       $elements.each(function() {\n          $element = $(this);\n\n          if(!(inViewPort = $element.offset().top < $window.scrollTop() + $window.height() - 300)) {\n            method = 'removeClass';\n          }\n\n           $element\n            [method](\"active\")\n            .closest(\"li\")\n            [method](\"active\")\n            .find(\".line\")\n            [method](\"active\");\n        });\n      }\n\n      // Bind\n      $(window).scroll(function() {\n        processLine();\n      });\n    },\n    render: function() {\n      this.$el.html(this.template(this.options.data));\n      this.trigger('render');\n      return this;\n    }\n  });\n\n  new app.homeView();\n\n})(window.app);\n\n","/*var\n  ContactView = Backbone.View.extend({\n    template: app.TPL.component.page.contact.view,\n    el: '.context-region',\n    options: {\n      data: {\n      }\n    },\n    render: function() {\n      this.$el.html(this.template(this.options.data));\n    }\n  }),\n  contactView = new ContactView();\n\ncontactView.render();\n*/\n"],"sourceRoot":"/source/"}